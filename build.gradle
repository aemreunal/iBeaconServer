buildscript {
    def tomcatGradlePluginVersion = '2.0'
    def propdepsPluginVersion = '0.0.7'

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "http://download.java.net/maven/2"
        }
        maven {
            url 'http://repo.spring.io/plugins-release'
        }
    }

    // Dependencies used for building the gradle script itself
    dependencies {
        classpath "com.bmuschko:gradle-tomcat-plugin:${tomcatGradlePluginVersion}"
        classpath "org.springframework.build.gradle:propdeps-plugin:${propdepsPluginVersion}"
    }
}

apply plugin: 'war'
apply plugin: 'com.bmuschko.tomcat'
apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'
apply plugin: 'propdeps-idea'
apply plugin: 'idea'
apply plugin: 'base'
apply plugin: 'jetty'
apply plugin: 'java'

// External libs
def apnsVersion = '1.0.0.Beta3'
def aspectJRTVersion = '1.8.1'
def aspectJWeaverVersion = '1.8.1'
def cglibVersion = '3.1'
def hibernateEntityManagerVersion = '4.3.8.Final'
def hibernateJPAAPI21Version = '1.0.0.Final'
def hibernateCoreVersion = '4.3.8.Final'
def hibernateValidatorVersion = '5.1.3.Final'
def jacksonCoreVersion = '2.5.1'
def jacksonDatabindVersion = '2.5.1'
def jacksonHibernateVersion = '2.5.1'
def javaxServletAPIVersion = '3.1.0'
def jaxbAPIVersion = '2.2.11'
def jsonPathVersion = '0.9.1'
def mysqlConnectorJDBCVersion = '5.1.34'
def slf4jLog4jVersion = '1.7.10'
def springDataJPAVersion = '1.6.2.RELEASE'
def springFrameworkVersion = '4.0.6.RELEASE'
def springHateoasVersion = '0.15.0.RELEASE'
def springSecurityOAuth2Version = '2.0.2.RELEASE'
def springSecurityCoreVersion = '3.2.5.RELEASE'
def springSecurityWebVersion = '3.2.5.RELEASE'
def tomcatVersion = '7.0.59'
def wrapperGradleVersion = '2.2.1'

repositories {
    mavenCentral()
    jcenter()
    maven {
        url "http://download.java.net/maven/2"
    }
    maven {
        url 'http://repo.spring.io/release/'
    }
}

dependencies {
    // slf4j, used by Hibernate for logging
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: slf4jLog4jVersion

    providedCompile "javax.servlet:javax.servlet-api:${javaxServletAPIVersion}"

    // Spring
    compile group: 'org.springframework.data', name: 'spring-data-jpa', version: springDataJPAVersion
    compile group: 'org.springframework', name: 'spring-jdbc', version: springFrameworkVersion
    compile group: 'org.springframework', name: 'spring-tx', version: springFrameworkVersion
    compile group: 'org.springframework', name: 'spring-orm', version: springFrameworkVersion
    compile group: 'org.springframework', name: 'spring-aop', version: springFrameworkVersion
    compile group: 'org.springframework', name: 'spring-webmvc', version: springFrameworkVersion
    compile group: 'org.springframework', name: 'spring-oxm', version: springFrameworkVersion
    compile group: 'org.springframework.security', name: 'spring-security-core', version: springSecurityCoreVersion
    compile group: 'org.springframework.security', name: 'spring-security-web', version: springSecurityWebVersion
    compile group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: springSecurityOAuth2Version
    compile group: 'org.springframework.hateoas', name: 'spring-hateoas', version: springHateoasVersion

    // Annotation support
    compile group: 'cglib', name: 'cglib-nodep', version: cglibVersion
    compile group: 'org.aspectj', name: 'aspectjrt', version: aspectJRTVersion
    compile group: 'org.aspectj', name: 'aspectjweaver', version: aspectJWeaverVersion

    // Hibernate
    compile group: 'org.hibernate', name: 'hibernate-core', version: hibernateCoreVersion
    compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: hibernateEntityManagerVersion
    compile group: 'org.hibernate', name: 'hibernate-validator', version: hibernateValidatorVersion
    compile group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.1-api', version: hibernateJPAAPI21Version

    // MySQL
    compile group: 'mysql', name: 'mysql-connector-java', version: mysqlConnectorJDBCVersion

    // Tomcat
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}"
    tomcat "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: jacksonCoreVersion
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonDatabindVersion
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hibernate4', version: jacksonHibernateVersion

    compile group: 'javax.xml.bind', name: 'jaxb-api', version: jaxbAPIVersion

    compile group: 'com.notnoop.apns', name: 'apns', version: apnsVersion

    compile group: 'com.jayway.jsonpath', name: 'json-path', version: jsonPathVersion
}

task copyToLib(type: Copy) {
    into "$buildDir/output/lib"
    from configurations.runtime
}

// Tomcat configuration, via https://github.com/bmuschko/gradle-tomcat-plugin
tomcat {
//    httpPort = 8080 // Default: 8080
//    httpsPort = 8081 // Default: 8443

//    To use as backgrounds service. Use stop port to stop Tomcat in that case.
//    tomcatRunWar.daemon = true // Default: false
    enableSSL = true
}

task wrapper(type: Wrapper) {
    gradleVersion = wrapperGradleVersion
}

task listJars << {
    configurations.compile.each { File file -> println file.name }
}

assemble.dependsOn copyToLib

tomcatRunWar.dependsOn.add(assemble)
tomcatRunWar.contextPath = ''
tomcatRunWar.outputFile = new File("log.txt")

println "Project is located in: " + projectDir
